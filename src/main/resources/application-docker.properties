# Docker Environment Configuration for Development Hour Management Tool

# Database Configuration - Docker service names
spring.datasource.url=jdbc:mysql://mysql:3306/devhour_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=devhour_user
spring.datasource.password=devhour_password

# Okta OAuth2 Configuration - Docker Environment
# Uses OKTA_DOMAIN environment variable for Docker containers
okta.oauth2.issuer=https://${OKTA_DOMAIN}/oauth2/default
okta.oauth2.client-id=${OKTA_CLIENT_ID}
okta.oauth2.client-secret=${OKTA_CLIENT_SECRET}
okta.oauth2.scopes=openid,profile,email
okta.oauth2.redirect-uri=/authorization-code/callback

# Spring Security OAuth2 Resource Server - Docker Environment
# JWT validation endpoints for containerized deployments
spring.security.oauth2.resourceserver.jwt.issuer-uri=${okta.oauth2.issuer}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${okta.oauth2.issuer}/v1/keys

# Override logging for container environment
logging.level.root=INFO
logging.level.com.devhour=INFO